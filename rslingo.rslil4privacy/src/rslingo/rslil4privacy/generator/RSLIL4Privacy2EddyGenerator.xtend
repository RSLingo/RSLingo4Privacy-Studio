/*
 * generated by Xtext
 */
package rslingo.rslil4privacy.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import rslingo.rslil4privacy.rSLIL4Privacy.Attribute
import rslingo.rslil4privacy.rSLIL4Privacy.Collection
import rslingo.rslil4privacy.rSLIL4Privacy.Disclosure
import rslingo.rslil4privacy.rSLIL4Privacy.Informative
import rslingo.rslil4privacy.rSLIL4Privacy.Policy
import rslingo.rslil4privacy.rSLIL4Privacy.PrivateData
import rslingo.rslil4privacy.rSLIL4Privacy.Recipient
import rslingo.rslil4privacy.rSLIL4Privacy.RefRecipientSource
import rslingo.rslil4privacy.rSLIL4Privacy.RefRecipientTarget
import rslingo.rslil4privacy.rSLIL4Privacy.Retention
import rslingo.rslil4privacy.rSLIL4Privacy.Service
import rslingo.rslil4privacy.rSLIL4Privacy.Usage

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class RSLIL4Privacy2EddyGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		fsa.generateFile(resource.className + '.policy',
			resource.allContents.filter(typeof(Policy)).map[compile].join(' ')
		)
	}
	
	def className(Resource res) {
	    var name = res.URI.lastSegment
	    return name.substring(0, name.indexOf('.'))
    }
    
def compile(Policy p)
'''SPEC HEADER
	ATTR NAMESPACE "http://gaius.isri.cmu.edu/example2.owl"
	ATTR DESC "«p.metadata.description»"
	«IF !p.recipient.empty»«FOR x:p.recipient»«x.compileActor»«ENDFOR»«ENDIF»
	«IF !p.service.empty»«FOR z:p.service»«z.compilePurpose»«ENDFOR»«ENDIF»
	«IF !p.privateData.empty»«FOR y:p.privateData»«y.compileDatum»«ENDFOR»«ENDIF»
	D ALL-Information > «IF !p.privateData.empty»«FOR z:p.privateData SEPARATOR ','»«z.compile»«ENDFOR»«ENDIF»
SPEC POLICY
	«IF !p.collection.empty»«FOR x:p.collection»«x.compileCollection»«ENDFOR»«ENDIF»
	«IF !p.disclosure.empty»«FOR x:p.disclosure»«x.compileTransfer»«ENDFOR»«ENDIF»
	«IF !p.retention.empty»«FOR x:p.retention»«x.compileRetention»«ENDFOR»«ENDIF»
	«IF !p.usage.empty»«FOR x:p.usage»«x.compileUsage»«ENDFOR»«ENDIF»
	«IF !p.informative.empty»«FOR x:p.informative»«x.compileInformative»«ENDFOR»«ENDIF»
'''
 
def compileActor(Recipient r)
'''«IF !r.recipientPart.empty»A «r.compileRecipient» > «FOR part:r.recipientPart SEPARATOR ','»«/*
*/»«part.recipientPart.compileRecipient»«ENDFOR»«ENDIF»
'''

def compileRecipient(Recipient r)
'''«r.recipientName»'''

def compilePurpose(Service s)
'''«IF !s.servicePart.empty»P «s.compile» > «FOR pur:s.servicePart SEPARATOR ','»«/*
*/»«pur.servicePart.compile»«ENDFOR»«ENDIF»
'''
 
def compileDatum(PrivateData pd)
'''«IF pd.name != null»D «pd.compile» > «FOR pdat:pd.attribute SEPARATOR ','»«pdat.compileAttribute»«ENDFOR»«ENDIF»
'''

def compileAttribute(Attribute a)
'''«a.name.replaceAll(" ", "-")»'''
 
def compileCollection(Collection c)
'''«IF c.modality == 'Permitted'»P «ELSEIF c.modality == 'Obligation'»O «ELSE»R «ENDIF»COLLECT «/*
*/»«IF c.refPDAll == 'All'»ALL-Information«ELSEIF !c.refPrivateData.empty»«c.refPrivateData.get(0).refPrivateData.compile»«FOR p:c.refPrivateData.get(0).refs», «p.compile»«ENDFOR»«ENDIF»«/*
*/»«IF !c.refService.empty» FOR «c.refService.get(0).refService.compile»«FOR s:c.refService.get(0).refs», «s.compile»«ENDFOR»«ELSE» FOR anything«ENDIF»
'''

def compileTransfer(Disclosure d)
'''«IF d.modality == 'Permitted'»P «ELSEIF d.modality == 'Obligation'»O «ELSE»R «ENDIF»TRANSFER «/*
*/»«IF d.refPDAll == 'All'»ALL-Information«ELSEIF !d.refPrivateData.empty»«d.refPrivateData.get(0).refPrivateData.compile»«FOR p:d.refPrivateData.get(0).refs», «p.compile»«ENDFOR»«ENDIF»«/*
*/»«IF !d.refRecipientSource.empty»FROM «FOR rs:d.refRecipientSource SEPARATOR ','»«rs.compile»«ENDFOR» «ENDIF»«/*
*/»«IF !d.refRecipientTarget.empty»TO «FOR rt:d.refRecipientTarget SEPARATOR ','»«rt.compile»«ENDFOR» «ENDIF»«/*
*/»«IF !d.refService.empty» FOR «d.refService.get(0).refService.compile»«FOR s:d.refService.get(0).refs», «s.compile»«ENDFOR»«ELSE» FOR anything«ENDIF»
'''
 
def compileRetention(Retention r)
'''«IF r.modality == 'Permitted'»P «ELSEIF r.modality == 'Obligation'»O «ELSE»R «ENDIF»RETAIN «/*
*/»«IF r.refPDAll == 'All'»ALL-Information«ELSEIF !r.refPrivateData.empty»«r.refPrivateData.get(0).refPrivateData.compile»«FOR p:r.refPrivateData.get(0).refs», «p.compile»«ENDFOR»«ENDIF»«/*
*/»«IF !r.refService.empty» FOR «r.refService.get(0).refService.compile»«FOR s:r.refService.get(0).refs», «s.compile»«ENDFOR»«ELSE» FOR anything«ENDIF»
'''
 
def compileUsage(Usage u)
'''«IF u.modality == 'Permitted'»P «ELSEIF u.modality == 'Obligation'»O «ELSE»R «ENDIF»USE «/*
*/»«IF u.refPDAll == 'All'»ALL-Information«ELSEIF !u.refPrivateData.empty»«u.refPrivateData.get(0).refPrivateData.compile»«FOR p:u.refPrivateData.get(0).refs», «p.compile»«ENDFOR»«ENDIF»«/*
*/»«IF !u.refService.empty» FOR «u.refService.get(0).refService.compile»«FOR s:u.refService.get(0).refs», «s.compile»«ENDFOR»«ELSE» FOR anything«ENDIF»
'''
 
def compileInformative(Informative i)
'''«IF i.modality == 'Permitted'»P «ELSEIF i.modality == 'Obligation'»O «ELSE»R «ENDIF»INFORM «/*
*/»«IF i.refPDAll == 'All'»ALL-Information«ELSEIF !i.refPrivateData.empty»«i.refPrivateData.get(0).refPrivateData.compile»«FOR p:i.refPrivateData.get(0).refs», «p.compile»«ENDFOR»«ENDIF»«/*
*/»«IF !i.refService.empty» FOR «i.refService.get(0).refService.compile»«FOR s:i.refService.get(0).refs», «s.compile»«ENDFOR»«ELSE» FOR anything«ENDIF»
'''

def compile(RefRecipientSource rs) '''«rs.refRecipientSource.recipientName.replaceAll(" ", "-")»'''

def compile(RefRecipientTarget rt) '''«rt.refRecipientTarget.recipientName.replaceAll(" ", "-")»'''

def compile(PrivateData p) '''«p.description.replaceAll(" ", "-")»'''

def compile(Service s) '''«s.serviceName.replaceAll(" ", "-")»'''

}